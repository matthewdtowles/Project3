/**
 * File: GUI.java
 * Author: Matthew Towles
 * Date: 11/25/2018
 * Purpose: Looks up number in sequence based on index given as input
 * 
 * 
 * when window is closed:
 *      efficiency computed with values of n from 0 to 10 and written to a file
 *      each line of file:  value of n, efficiency of iterative method for 
 *          that value of n, efficiency of the recursive method
 *          should be an object of an inner class that extends the WindowAdapter class
 *      
 */
package project3;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author matthew.towles
 */
public class GUI extends javax.swing.JFrame {

    // index in sequence of number to look up
    private int index;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        initWindow();
    }

    private void initWindow() {
        this.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent evt) {
                try {
                    writeToFile();
                } catch (IOException ex) {
                    Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
                } finally {
                    evt.getWindow().dispose();
                }
                
            }
        });   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        methodOptions = new javax.swing.ButtonGroup();
        iterativeOption = new javax.swing.JRadioButton();
        recursiveOption = new javax.swing.JRadioButton();
        inputTextField = new javax.swing.JTextField();
        computeButton = new javax.swing.JButton();
        resultTextField = new javax.swing.JTextField();
        efficiencyTextField = new javax.swing.JTextField();
        inputLabel = new javax.swing.JLabel();
        resultLabel = new javax.swing.JLabel();
        efficiencyLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Project 3");

        methodOptions.add(iterativeOption);
        iterativeOption.setSelected(true);
        iterativeOption.setText("Iterative");

        methodOptions.add(recursiveOption);
        recursiveOption.setText("Recursive");

        inputTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                inputTextFieldFocusLost(evt);
            }
        });
        inputTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextFieldActionPerformed(evt);
            }
        });

        computeButton.setText("Compute");
        computeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                computeButtonActionPerformed(evt);
            }
        });

        resultTextField.setEditable(false);

        efficiencyTextField.setEditable(false);
        efficiencyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                efficiencyTextFieldActionPerformed(evt);
            }
        });

        inputLabel.setText("Enter n:");

        resultLabel.setText("Result:");

        efficiencyLabel.setText("Efficiency:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputLabel)
                    .addComponent(resultLabel)
                    .addComponent(efficiencyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 157, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(efficiencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(computeButton)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recursiveOption)
                    .addComponent(iterativeOption))
                .addGap(90, 90, 90))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {computeButton, efficiencyTextField, inputTextField, resultTextField});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(iterativeOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recursiveOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(inputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(computeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(resultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resultLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(efficiencyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(efficiencyLabel))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Event handler for compute button
     * 
     * Checks which radio button is selected
     * Saves result based on this
     * Saves efficiency counter
     * Sets result and efficiency fields with new values
     * 
     * @param evt 
     */
    private void computeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_computeButtonActionPerformed
        // string for resultTextField
        String result;
        
        // perform recursive method if recursive selected:
        if (recursiveOption.isSelected()) {
            result = String.valueOf(Sequence.computeRecursive(this.index));
        } else {
            // default is iterative option
            result = String.valueOf(Sequence.computeIterative(this.index));
        }
        // show number at index in result field
        resultTextField.setText(result);
        
        // show efficiency in efficiency field
        String efficiency = String.valueOf(Sequence.getEfficiency());
        efficiencyTextField.setText(efficiency);
    }//GEN-LAST:event_computeButtonActionPerformed

    private void efficiencyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_efficiencyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_efficiencyTextFieldActionPerformed

    private void inputTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextFieldActionPerformed
        
    }//GEN-LAST:event_inputTextFieldActionPerformed

    /**
     * Update amountEntered after user finished typing in this field
     * @param evt 
     */
    private void inputTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputTextFieldFocusLost
        this.updateIndex();
    }//GEN-LAST:event_inputTextFieldFocusLost

    /**
     * Update the index variable user input value
     * Called when the inputTextField is clicked out of (loses focus) 
     */
    private void updateIndex() {
                // do not evaluate if user did not enter anything
        if (this.inputTextField.getText().length() > 0) {
            try {
                this.index = Integer.parseInt(this.inputTextField.getText());
                // throw exception if less than 1 entered
                if (this.index < 0) {
                    throw new NumberFormatException("Amount too small.");
                }
            } catch(NumberFormatException e) {
                // reset input
                this.inputTextField.setText("");
                JOptionPane.showMessageDialog(this, e.getMessage(), 
                        "Please enter index of 1 or greater", JOptionPane.ERROR_MESSAGE);
            } finally {
                this.inputTextField.setText("");
                this.resultTextField.setText("");
                this.efficiencyTextField.setText("");
            }
        } else {
            // if cleared then just set amount to 0
            this.index = 0;
        }
    }
    
    private static void writeToFile() throws IOException {
        File file = new File("first_ten.csv");
        FileWriter fw = new FileWriter(file.getAbsoluteFile());
        // try with resources - auto closes file
        try (BufferedWriter bw = new BufferedWriter(fw)) {
            String data = "Value, Iterative Efficiency, Recursive Efficiency";
            for (int i = 0; i <= 10; i++) {
                data += "\n";
                data += String.valueOf(Sequence.computeIterative(i)) + ",";
                data += String.valueOf(Sequence.getEfficiency()) + ",";
                // calculate so that we can get the recursive efficiency
                Sequence.computeRecursive(i);
                data += String.valueOf(Sequence.getEfficiency());
            }
            bw.write(data);
        }
    }
    
    
    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String args[]) throws IOException {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton computeButton;
    private javax.swing.JLabel efficiencyLabel;
    private javax.swing.JTextField efficiencyTextField;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JTextField inputTextField;
    private javax.swing.JRadioButton iterativeOption;
    private javax.swing.ButtonGroup methodOptions;
    private javax.swing.JRadioButton recursiveOption;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JTextField resultTextField;
    // End of variables declaration//GEN-END:variables
}
